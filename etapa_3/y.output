Terminals unused in grammar

   KW_FOR
   TOKEN_ERROR


State 132 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decl

    2 decl: dec decl
    3     | %empty

    4 dec: fundec
    5    | vardec

    6 vardec: SYMBOL_IDENTIFIER ':' tipevardec '=' literal ';'
    7       | SYMBOL_IDENTIFIER ':' tipevardec '[' literal ']' vectorinit ';'

    8 vectorinit: SYMBOL_LIT_INT vectorinit
    9           | SYMBOL_LIT_REAL vectorinit
   10           | SYMBOL_LIT_CHAR vectorinit
   11           | %empty

   12 tipevardec: KW_BYTE
   13           | KW_SHORT
   14           | KW_LONG
   15           | KW_FLOAT
   16           | KW_DOUBLE

   17 literal: SYMBOL_LIT_INT
   18        | SYMBOL_LIT_REAL
   19        | SYMBOL_LIT_CHAR
   20        | SYMBOL_LIT_STRING

   21 fundec: '(' tipevardec ')' SYMBOL_IDENTIFIER '(' funargl ')' block

   22 funargl: funarg funrest
   23        | %empty

   24 funrest: ',' funarg funrest
   25        | %empty

   26 funarg: SYMBOL_IDENTIFIER ':' tipevardec

   27 block: '{' lcmd '}'

   28 lcmd: cmd ';' lcmd
   29     | cmd

   30 cmd: SYMBOL_IDENTIFIER '=' exp
   31    | SYMBOL_IDENTIFIER '[' exp ']' '=' exp
   32    | KW_READ '>' SYMBOL_IDENTIFIER
   33    | KW_RETURN exp
   34    | KW_PRINT eprint
   35    | cmdif
   36    | cmdwhile
   37    | block
   38    | %empty

   39 eprint: argprint restprint

   40 restprint: ',' argprint restprint
   41          | %empty

   42 argprint: exp
   43         | SYMBOL_LIT_STRING

   44 exp: exp '+' exp
   45    | exp '-' exp
   46    | exp '*' exp
   47    | exp '/' exp
   48    | exp '<' exp
   49    | exp '>' exp
   50    | exp '!' exp
   51    | exp OPERATOR_LE exp
   52    | exp OPERATOR_GE exp
   53    | exp OPERATOR_EQ exp
   54    | exp OPERATOR_NE exp
   55    | exp OPERATOR_AND exp
   56    | exp OPERATOR_OR exp
   57    | SYMBOL_IDENTIFIER '(' funparaml ')'
   58    | SYMBOL_IDENTIFIER '[' exp ']'
   59    | SYMBOL_LIT_INT
   60    | SYMBOL_LIT_REAL
   61    | SYMBOL_LIT_CHAR
   62    | SYMBOL_IDENTIFIER
   63    | '(' exp ')'

   64 funparaml: exp funparamrest
   65          | %empty

   66 funparamrest: ',' exp funparamrest
   67             | %empty

   68 cmdif: KW_IF '(' exp ')' KW_THEN cmd
   69      | KW_IF '(' exp ')' KW_THEN cmd KW_ELSE cmd

   70 cmdwhile: KW_WHILE '(' exp ')' cmd


Terminals, with rules where they appear

$end (0) 0
'!' (33) 50
'(' (40) 21 57 63 68 69 70
')' (41) 21 57 63 68 69 70
'*' (42) 46
'+' (43) 44
',' (44) 24 40 66
'-' (45) 45
'/' (47) 47
':' (58) 6 7 26
';' (59) 6 7 28
'<' (60) 48
'=' (61) 6 30 31
'>' (62) 32 49
'[' (91) 7 31 58
']' (93) 7 31 58
'{' (123) 27
'}' (125) 27
KW_BYTE (256) 12
KW_SHORT (257) 13
KW_LONG (258) 14
KW_FLOAT (259) 15
KW_DOUBLE (260) 16
KW_IF (261) 68 69
KW_THEN (262) 68 69
KW_ELSE (263) 69
KW_WHILE (264) 70
KW_FOR (265)
KW_READ (266) 32
KW_RETURN (267) 33
KW_PRINT (268) 34
OPERATOR_LE (270) 51
OPERATOR_GE (271) 52
OPERATOR_EQ (272) 53
OPERATOR_NE (273) 54
OPERATOR_AND (274) 55
OPERATOR_OR (275) 56
TOKEN_ERROR (290)
error (291)
SYMBOL_IDENTIFIER (293) 6 7 21 26 30 31 32 57 58 62
SYMBOL_LIT_INT (294) 8 17 59
SYMBOL_LIT_REAL (295) 9 18 60
SYMBOL_LIT_CHAR (296) 10 19 61
SYMBOL_LIT_STRING (297) 20 43


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
decl (47)
    on left: 2 3, on right: 1 2
dec (48)
    on left: 4 5, on right: 2
vardec (49)
    on left: 6 7, on right: 5
vectorinit (50)
    on left: 8 9 10 11, on right: 7 8 9 10
tipevardec (51)
    on left: 12 13 14 15 16, on right: 6 7 21 26
literal (52)
    on left: 17 18 19 20, on right: 6 7
fundec (53)
    on left: 21, on right: 4
funargl (54)
    on left: 22 23, on right: 21
funrest (55)
    on left: 24 25, on right: 22 24
funarg (56)
    on left: 26, on right: 22 24
block (57)
    on left: 27, on right: 21 37
lcmd (58)
    on left: 28 29, on right: 27 28
cmd (59)
    on left: 30 31 32 33 34 35 36 37 38, on right: 28 29 68 69 70
eprint (60)
    on left: 39, on right: 34
restprint (61)
    on left: 40 41, on right: 39 40
argprint (62)
    on left: 42 43, on right: 39 40
exp (63)
    on left: 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
    62 63, on right: 30 31 33 42 44 45 46 47 48 49 50 51 52 53 54 55
    56 58 63 64 66 68 69 70
funparaml (64)
    on left: 64 65, on right: 57
funparamrest (65)
    on left: 66 67, on right: 64 66
cmdif (66)
    on left: 68 69, on right: 35
cmdwhile (67)
    on left: 70, on right: 36


State 0

    0 $accept: . program $end

    SYMBOL_IDENTIFIER  shift, and go to state 1
    '('                shift, and go to state 2

    $default  reduce using rule 3 (decl)

    program  go to state 3
    decl     go to state 4
    dec      go to state 5
    vardec   go to state 6
    fundec   go to state 7


State 1

    6 vardec: SYMBOL_IDENTIFIER . ':' tipevardec '=' literal ';'
    7       | SYMBOL_IDENTIFIER . ':' tipevardec '[' literal ']' vectorinit ';'

    ':'  shift, and go to state 8


State 2

   21 fundec: '(' . tipevardec ')' SYMBOL_IDENTIFIER '(' funargl ')' block

    KW_BYTE    shift, and go to state 9
    KW_SHORT   shift, and go to state 10
    KW_LONG    shift, and go to state 11
    KW_FLOAT   shift, and go to state 12
    KW_DOUBLE  shift, and go to state 13

    tipevardec  go to state 14


State 3

    0 $accept: program . $end

    $end  shift, and go to state 15


State 4

    1 program: decl .

    $default  reduce using rule 1 (program)


State 5

    2 decl: dec . decl

    SYMBOL_IDENTIFIER  shift, and go to state 1
    '('                shift, and go to state 2

    $default  reduce using rule 3 (decl)

    decl    go to state 16
    dec     go to state 5
    vardec  go to state 6
    fundec  go to state 7


State 6

    5 dec: vardec .

    $default  reduce using rule 5 (dec)


State 7

    4 dec: fundec .

    $default  reduce using rule 4 (dec)


State 8

    6 vardec: SYMBOL_IDENTIFIER ':' . tipevardec '=' literal ';'
    7       | SYMBOL_IDENTIFIER ':' . tipevardec '[' literal ']' vectorinit ';'

    KW_BYTE    shift, and go to state 9
    KW_SHORT   shift, and go to state 10
    KW_LONG    shift, and go to state 11
    KW_FLOAT   shift, and go to state 12
    KW_DOUBLE  shift, and go to state 13

    tipevardec  go to state 17


State 9

   12 tipevardec: KW_BYTE .

    $default  reduce using rule 12 (tipevardec)


State 10

   13 tipevardec: KW_SHORT .

    $default  reduce using rule 13 (tipevardec)


State 11

   14 tipevardec: KW_LONG .

    $default  reduce using rule 14 (tipevardec)


State 12

   15 tipevardec: KW_FLOAT .

    $default  reduce using rule 15 (tipevardec)


State 13

   16 tipevardec: KW_DOUBLE .

    $default  reduce using rule 16 (tipevardec)


State 14

   21 fundec: '(' tipevardec . ')' SYMBOL_IDENTIFIER '(' funargl ')' block

    ')'  shift, and go to state 18


State 15

    0 $accept: program $end .

    $default  accept


State 16

    2 decl: dec decl .

    $default  reduce using rule 2 (decl)


State 17

    6 vardec: SYMBOL_IDENTIFIER ':' tipevardec . '=' literal ';'
    7       | SYMBOL_IDENTIFIER ':' tipevardec . '[' literal ']' vectorinit ';'

    '='  shift, and go to state 19
    '['  shift, and go to state 20


State 18

   21 fundec: '(' tipevardec ')' . SYMBOL_IDENTIFIER '(' funargl ')' block

    SYMBOL_IDENTIFIER  shift, and go to state 21


State 19

    6 vardec: SYMBOL_IDENTIFIER ':' tipevardec '=' . literal ';'

    SYMBOL_LIT_INT     shift, and go to state 22
    SYMBOL_LIT_REAL    shift, and go to state 23
    SYMBOL_LIT_CHAR    shift, and go to state 24
    SYMBOL_LIT_STRING  shift, and go to state 25

    literal  go to state 26


State 20

    7 vardec: SYMBOL_IDENTIFIER ':' tipevardec '[' . literal ']' vectorinit ';'

    SYMBOL_LIT_INT     shift, and go to state 22
    SYMBOL_LIT_REAL    shift, and go to state 23
    SYMBOL_LIT_CHAR    shift, and go to state 24
    SYMBOL_LIT_STRING  shift, and go to state 25

    literal  go to state 27


State 21

   21 fundec: '(' tipevardec ')' SYMBOL_IDENTIFIER . '(' funargl ')' block

    '('  shift, and go to state 28


State 22

   17 literal: SYMBOL_LIT_INT .

    $default  reduce using rule 17 (literal)


State 23

   18 literal: SYMBOL_LIT_REAL .

    $default  reduce using rule 18 (literal)


State 24

   19 literal: SYMBOL_LIT_CHAR .

    $default  reduce using rule 19 (literal)


State 25

   20 literal: SYMBOL_LIT_STRING .

    $default  reduce using rule 20 (literal)


State 26

    6 vardec: SYMBOL_IDENTIFIER ':' tipevardec '=' literal . ';'

    ';'  shift, and go to state 29


State 27

    7 vardec: SYMBOL_IDENTIFIER ':' tipevardec '[' literal . ']' vectorinit ';'

    ']'  shift, and go to state 30


State 28

   21 fundec: '(' tipevardec ')' SYMBOL_IDENTIFIER '(' . funargl ')' block

    SYMBOL_IDENTIFIER  shift, and go to state 31

    $default  reduce using rule 23 (funargl)

    funargl  go to state 32
    funarg   go to state 33


State 29

    6 vardec: SYMBOL_IDENTIFIER ':' tipevardec '=' literal ';' .

    $default  reduce using rule 6 (vardec)


State 30

    7 vardec: SYMBOL_IDENTIFIER ':' tipevardec '[' literal ']' . vectorinit ';'

    SYMBOL_LIT_INT   shift, and go to state 34
    SYMBOL_LIT_REAL  shift, and go to state 35
    SYMBOL_LIT_CHAR  shift, and go to state 36

    $default  reduce using rule 11 (vectorinit)

    vectorinit  go to state 37


State 31

   26 funarg: SYMBOL_IDENTIFIER . ':' tipevardec

    ':'  shift, and go to state 38


State 32

   21 fundec: '(' tipevardec ')' SYMBOL_IDENTIFIER '(' funargl . ')' block

    ')'  shift, and go to state 39


State 33

   22 funargl: funarg . funrest

    ','  shift, and go to state 40

    $default  reduce using rule 25 (funrest)

    funrest  go to state 41


State 34

    8 vectorinit: SYMBOL_LIT_INT . vectorinit

    SYMBOL_LIT_INT   shift, and go to state 34
    SYMBOL_LIT_REAL  shift, and go to state 35
    SYMBOL_LIT_CHAR  shift, and go to state 36

    $default  reduce using rule 11 (vectorinit)

    vectorinit  go to state 42


State 35

    9 vectorinit: SYMBOL_LIT_REAL . vectorinit

    SYMBOL_LIT_INT   shift, and go to state 34
    SYMBOL_LIT_REAL  shift, and go to state 35
    SYMBOL_LIT_CHAR  shift, and go to state 36

    $default  reduce using rule 11 (vectorinit)

    vectorinit  go to state 43


State 36

   10 vectorinit: SYMBOL_LIT_CHAR . vectorinit

    SYMBOL_LIT_INT   shift, and go to state 34
    SYMBOL_LIT_REAL  shift, and go to state 35
    SYMBOL_LIT_CHAR  shift, and go to state 36

    $default  reduce using rule 11 (vectorinit)

    vectorinit  go to state 44


State 37

    7 vardec: SYMBOL_IDENTIFIER ':' tipevardec '[' literal ']' vectorinit . ';'

    ';'  shift, and go to state 45


State 38

   26 funarg: SYMBOL_IDENTIFIER ':' . tipevardec

    KW_BYTE    shift, and go to state 9
    KW_SHORT   shift, and go to state 10
    KW_LONG    shift, and go to state 11
    KW_FLOAT   shift, and go to state 12
    KW_DOUBLE  shift, and go to state 13

    tipevardec  go to state 46


State 39

   21 fundec: '(' tipevardec ')' SYMBOL_IDENTIFIER '(' funargl ')' . block

    '{'  shift, and go to state 47

    block  go to state 48


State 40

   24 funrest: ',' . funarg funrest

    SYMBOL_IDENTIFIER  shift, and go to state 31

    funarg  go to state 49


State 41

   22 funargl: funarg funrest .

    $default  reduce using rule 22 (funargl)


State 42

    8 vectorinit: SYMBOL_LIT_INT vectorinit .

    $default  reduce using rule 8 (vectorinit)


State 43

    9 vectorinit: SYMBOL_LIT_REAL vectorinit .

    $default  reduce using rule 9 (vectorinit)


State 44

   10 vectorinit: SYMBOL_LIT_CHAR vectorinit .

    $default  reduce using rule 10 (vectorinit)


State 45

    7 vardec: SYMBOL_IDENTIFIER ':' tipevardec '[' literal ']' vectorinit ';' .

    $default  reduce using rule 7 (vardec)


State 46

   26 funarg: SYMBOL_IDENTIFIER ':' tipevardec .

    $default  reduce using rule 26 (funarg)


State 47

   27 block: '{' . lcmd '}'

    KW_IF              shift, and go to state 50
    KW_WHILE           shift, and go to state 51
    KW_READ            shift, and go to state 52
    KW_RETURN          shift, and go to state 53
    KW_PRINT           shift, and go to state 54
    SYMBOL_IDENTIFIER  shift, and go to state 55
    '{'                shift, and go to state 47

    $default  reduce using rule 38 (cmd)

    block     go to state 56
    lcmd      go to state 57
    cmd       go to state 58
    cmdif     go to state 59
    cmdwhile  go to state 60


State 48

   21 fundec: '(' tipevardec ')' SYMBOL_IDENTIFIER '(' funargl ')' block .

    $default  reduce using rule 21 (fundec)


State 49

   24 funrest: ',' funarg . funrest

    ','  shift, and go to state 40

    $default  reduce using rule 25 (funrest)

    funrest  go to state 61


State 50

   68 cmdif: KW_IF . '(' exp ')' KW_THEN cmd
   69      | KW_IF . '(' exp ')' KW_THEN cmd KW_ELSE cmd

    '('  shift, and go to state 62


State 51

   70 cmdwhile: KW_WHILE . '(' exp ')' cmd

    '('  shift, and go to state 63


State 52

   32 cmd: KW_READ . '>' SYMBOL_IDENTIFIER

    '>'  shift, and go to state 64


State 53

   33 cmd: KW_RETURN . exp

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    '('                shift, and go to state 69

    exp  go to state 70


State 54

   34 cmd: KW_PRINT . eprint

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    SYMBOL_LIT_STRING  shift, and go to state 71
    '('                shift, and go to state 69

    eprint    go to state 72
    argprint  go to state 73
    exp       go to state 74


State 55

   30 cmd: SYMBOL_IDENTIFIER . '=' exp
   31    | SYMBOL_IDENTIFIER . '[' exp ']' '=' exp

    '='  shift, and go to state 75
    '['  shift, and go to state 76


State 56

   37 cmd: block .

    $default  reduce using rule 37 (cmd)


State 57

   27 block: '{' lcmd . '}'

    '}'  shift, and go to state 77


State 58

   28 lcmd: cmd . ';' lcmd
   29     | cmd .

    ';'  shift, and go to state 78

    $default  reduce using rule 29 (lcmd)


State 59

   35 cmd: cmdif .

    $default  reduce using rule 35 (cmd)


State 60

   36 cmd: cmdwhile .

    $default  reduce using rule 36 (cmd)


State 61

   24 funrest: ',' funarg funrest .

    $default  reduce using rule 24 (funrest)


State 62

   68 cmdif: KW_IF '(' . exp ')' KW_THEN cmd
   69      | KW_IF '(' . exp ')' KW_THEN cmd KW_ELSE cmd

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    '('                shift, and go to state 69

    exp  go to state 79


State 63

   70 cmdwhile: KW_WHILE '(' . exp ')' cmd

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    '('                shift, and go to state 69

    exp  go to state 80


State 64

   32 cmd: KW_READ '>' . SYMBOL_IDENTIFIER

    SYMBOL_IDENTIFIER  shift, and go to state 81


State 65

   57 exp: SYMBOL_IDENTIFIER . '(' funparaml ')'
   58    | SYMBOL_IDENTIFIER . '[' exp ']'
   62    | SYMBOL_IDENTIFIER .

    '['  shift, and go to state 82
    '('  shift, and go to state 83

    $default  reduce using rule 62 (exp)


State 66

   59 exp: SYMBOL_LIT_INT .

    $default  reduce using rule 59 (exp)


State 67

   60 exp: SYMBOL_LIT_REAL .

    $default  reduce using rule 60 (exp)


State 68

   61 exp: SYMBOL_LIT_CHAR .

    $default  reduce using rule 61 (exp)


State 69

   63 exp: '(' . exp ')'

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    '('                shift, and go to state 69

    exp  go to state 84


State 70

   33 cmd: KW_RETURN exp .
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   50    | exp . '!' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '!'           shift, and go to state 91
    '<'           shift, and go to state 92
    '>'           shift, and go to state 93
    '+'           shift, and go to state 94
    '-'           shift, and go to state 95
    '*'           shift, and go to state 96
    '/'           shift, and go to state 97

    $default  reduce using rule 33 (cmd)


State 71

   43 argprint: SYMBOL_LIT_STRING .

    $default  reduce using rule 43 (argprint)


State 72

   34 cmd: KW_PRINT eprint .

    $default  reduce using rule 34 (cmd)


State 73

   39 eprint: argprint . restprint

    ','  shift, and go to state 98

    $default  reduce using rule 41 (restprint)

    restprint  go to state 99


State 74

   42 argprint: exp .
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   50    | exp . '!' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '!'           shift, and go to state 91
    '<'           shift, and go to state 92
    '>'           shift, and go to state 93
    '+'           shift, and go to state 94
    '-'           shift, and go to state 95
    '*'           shift, and go to state 96
    '/'           shift, and go to state 97

    $default  reduce using rule 42 (argprint)


State 75

   30 cmd: SYMBOL_IDENTIFIER '=' . exp

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    '('                shift, and go to state 69

    exp  go to state 100


State 76

   31 cmd: SYMBOL_IDENTIFIER '[' . exp ']' '=' exp

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    '('                shift, and go to state 69

    exp  go to state 101


State 77

   27 block: '{' lcmd '}' .

    $default  reduce using rule 27 (block)


State 78

   28 lcmd: cmd ';' . lcmd

    KW_IF              shift, and go to state 50
    KW_WHILE           shift, and go to state 51
    KW_READ            shift, and go to state 52
    KW_RETURN          shift, and go to state 53
    KW_PRINT           shift, and go to state 54
    SYMBOL_IDENTIFIER  shift, and go to state 55
    '{'                shift, and go to state 47

    $default  reduce using rule 38 (cmd)

    block     go to state 56
    lcmd      go to state 102
    cmd       go to state 58
    cmdif     go to state 59
    cmdwhile  go to state 60


State 79

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   50    | exp . '!' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp
   68 cmdif: KW_IF '(' exp . ')' KW_THEN cmd
   69      | KW_IF '(' exp . ')' KW_THEN cmd KW_ELSE cmd

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '!'           shift, and go to state 91
    '<'           shift, and go to state 92
    '>'           shift, and go to state 93
    '+'           shift, and go to state 94
    '-'           shift, and go to state 95
    '*'           shift, and go to state 96
    '/'           shift, and go to state 97
    ')'           shift, and go to state 103


State 80

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   50    | exp . '!' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp
   70 cmdwhile: KW_WHILE '(' exp . ')' cmd

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '!'           shift, and go to state 91
    '<'           shift, and go to state 92
    '>'           shift, and go to state 93
    '+'           shift, and go to state 94
    '-'           shift, and go to state 95
    '*'           shift, and go to state 96
    '/'           shift, and go to state 97
    ')'           shift, and go to state 104


State 81

   32 cmd: KW_READ '>' SYMBOL_IDENTIFIER .

    $default  reduce using rule 32 (cmd)


State 82

   58 exp: SYMBOL_IDENTIFIER '[' . exp ']'

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    '('                shift, and go to state 69

    exp  go to state 105


State 83

   57 exp: SYMBOL_IDENTIFIER '(' . funparaml ')'

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    '('                shift, and go to state 69

    $default  reduce using rule 65 (funparaml)

    exp        go to state 106
    funparaml  go to state 107


State 84

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   50    | exp . '!' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp
   63    | '(' exp . ')'

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '!'           shift, and go to state 91
    '<'           shift, and go to state 92
    '>'           shift, and go to state 93
    '+'           shift, and go to state 94
    '-'           shift, and go to state 95
    '*'           shift, and go to state 96
    '/'           shift, and go to state 97
    ')'           shift, and go to state 108


State 85

   51 exp: exp OPERATOR_LE . exp

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    '('                shift, and go to state 69

    exp  go to state 109


State 86

   52 exp: exp OPERATOR_GE . exp

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    '('                shift, and go to state 69

    exp  go to state 110


State 87

   53 exp: exp OPERATOR_EQ . exp

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    '('                shift, and go to state 69

    exp  go to state 111


State 88

   54 exp: exp OPERATOR_NE . exp

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    '('                shift, and go to state 69

    exp  go to state 112


State 89

   55 exp: exp OPERATOR_AND . exp

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    '('                shift, and go to state 69

    exp  go to state 113


State 90

   56 exp: exp OPERATOR_OR . exp

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    '('                shift, and go to state 69

    exp  go to state 114


State 91

   50 exp: exp '!' . exp

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    '('                shift, and go to state 69

    exp  go to state 115


State 92

   48 exp: exp '<' . exp

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    '('                shift, and go to state 69

    exp  go to state 116


State 93

   49 exp: exp '>' . exp

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    '('                shift, and go to state 69

    exp  go to state 117


State 94

   44 exp: exp '+' . exp

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    '('                shift, and go to state 69

    exp  go to state 118


State 95

   45 exp: exp '-' . exp

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    '('                shift, and go to state 69

    exp  go to state 119


State 96

   46 exp: exp '*' . exp

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    '('                shift, and go to state 69

    exp  go to state 120


State 97

   47 exp: exp '/' . exp

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    '('                shift, and go to state 69

    exp  go to state 121


State 98

   40 restprint: ',' . argprint restprint

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    SYMBOL_LIT_STRING  shift, and go to state 71
    '('                shift, and go to state 69

    argprint  go to state 122
    exp       go to state 74


State 99

   39 eprint: argprint restprint .

    $default  reduce using rule 39 (eprint)


State 100

   30 cmd: SYMBOL_IDENTIFIER '=' exp .
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   50    | exp . '!' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '!'           shift, and go to state 91
    '<'           shift, and go to state 92
    '>'           shift, and go to state 93
    '+'           shift, and go to state 94
    '-'           shift, and go to state 95
    '*'           shift, and go to state 96
    '/'           shift, and go to state 97

    $default  reduce using rule 30 (cmd)


State 101

   31 cmd: SYMBOL_IDENTIFIER '[' exp . ']' '=' exp
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   50    | exp . '!' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '!'           shift, and go to state 91
    '<'           shift, and go to state 92
    '>'           shift, and go to state 93
    '+'           shift, and go to state 94
    '-'           shift, and go to state 95
    '*'           shift, and go to state 96
    '/'           shift, and go to state 97
    ']'           shift, and go to state 123


State 102

   28 lcmd: cmd ';' lcmd .

    $default  reduce using rule 28 (lcmd)


State 103

   68 cmdif: KW_IF '(' exp ')' . KW_THEN cmd
   69      | KW_IF '(' exp ')' . KW_THEN cmd KW_ELSE cmd

    KW_THEN  shift, and go to state 124


State 104

   70 cmdwhile: KW_WHILE '(' exp ')' . cmd

    KW_IF              shift, and go to state 50
    KW_WHILE           shift, and go to state 51
    KW_READ            shift, and go to state 52
    KW_RETURN          shift, and go to state 53
    KW_PRINT           shift, and go to state 54
    SYMBOL_IDENTIFIER  shift, and go to state 55
    '{'                shift, and go to state 47

    $default  reduce using rule 38 (cmd)

    block     go to state 56
    cmd       go to state 125
    cmdif     go to state 59
    cmdwhile  go to state 60


State 105

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   50    | exp . '!' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp
   58    | SYMBOL_IDENTIFIER '[' exp . ']'

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '!'           shift, and go to state 91
    '<'           shift, and go to state 92
    '>'           shift, and go to state 93
    '+'           shift, and go to state 94
    '-'           shift, and go to state 95
    '*'           shift, and go to state 96
    '/'           shift, and go to state 97
    ']'           shift, and go to state 126


State 106

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   50    | exp . '!' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp
   64 funparaml: exp . funparamrest

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '!'           shift, and go to state 91
    '<'           shift, and go to state 92
    '>'           shift, and go to state 93
    '+'           shift, and go to state 94
    '-'           shift, and go to state 95
    '*'           shift, and go to state 96
    '/'           shift, and go to state 97
    ','           shift, and go to state 127

    $default  reduce using rule 67 (funparamrest)

    funparamrest  go to state 128


State 107

   57 exp: SYMBOL_IDENTIFIER '(' funparaml . ')'

    ')'  shift, and go to state 129


State 108

   63 exp: '(' exp ')' .

    $default  reduce using rule 63 (exp)


State 109

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   50    | exp . '!' exp
   51    | exp . OPERATOR_LE exp
   51    | exp OPERATOR_LE exp .
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97

    $default  reduce using rule 51 (exp)

    Conflict between rule 51 and token OPERATOR_LE resolved as reduce (%left OPERATOR_LE).
    Conflict between rule 51 and token OPERATOR_GE resolved as reduce (%left OPERATOR_GE).
    Conflict between rule 51 and token OPERATOR_EQ resolved as reduce (%left OPERATOR_EQ).
    Conflict between rule 51 and token OPERATOR_NE resolved as reduce (%left OPERATOR_NE).
    Conflict between rule 51 and token OPERATOR_AND resolved as reduce (OPERATOR_AND < OPERATOR_LE).
    Conflict between rule 51 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < OPERATOR_LE).
    Conflict between rule 51 and token '!' resolved as reduce ('!' < OPERATOR_LE).
    Conflict between rule 51 and token '<' resolved as reduce (%left '<').
    Conflict between rule 51 and token '>' resolved as reduce (%left '>').
    Conflict between rule 51 and token '+' resolved as shift (OPERATOR_LE < '+').
    Conflict between rule 51 and token '-' resolved as shift (OPERATOR_LE < '-').
    Conflict between rule 51 and token '*' resolved as shift (OPERATOR_LE < '*').
    Conflict between rule 51 and token '/' resolved as shift (OPERATOR_LE < '/').


State 110

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   50    | exp . '!' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   52    | exp OPERATOR_GE exp .
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97

    $default  reduce using rule 52 (exp)

    Conflict between rule 52 and token OPERATOR_LE resolved as reduce (%left OPERATOR_LE).
    Conflict between rule 52 and token OPERATOR_GE resolved as reduce (%left OPERATOR_GE).
    Conflict between rule 52 and token OPERATOR_EQ resolved as reduce (%left OPERATOR_EQ).
    Conflict between rule 52 and token OPERATOR_NE resolved as reduce (%left OPERATOR_NE).
    Conflict between rule 52 and token OPERATOR_AND resolved as reduce (OPERATOR_AND < OPERATOR_GE).
    Conflict between rule 52 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < OPERATOR_GE).
    Conflict between rule 52 and token '!' resolved as reduce ('!' < OPERATOR_GE).
    Conflict between rule 52 and token '<' resolved as reduce (%left '<').
    Conflict between rule 52 and token '>' resolved as reduce (%left '>').
    Conflict between rule 52 and token '+' resolved as shift (OPERATOR_GE < '+').
    Conflict between rule 52 and token '-' resolved as shift (OPERATOR_GE < '-').
    Conflict between rule 52 and token '*' resolved as shift (OPERATOR_GE < '*').
    Conflict between rule 52 and token '/' resolved as shift (OPERATOR_GE < '/').


State 111

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   50    | exp . '!' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   53    | exp OPERATOR_EQ exp .
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97

    $default  reduce using rule 53 (exp)

    Conflict between rule 53 and token OPERATOR_LE resolved as reduce (%left OPERATOR_LE).
    Conflict between rule 53 and token OPERATOR_GE resolved as reduce (%left OPERATOR_GE).
    Conflict between rule 53 and token OPERATOR_EQ resolved as reduce (%left OPERATOR_EQ).
    Conflict between rule 53 and token OPERATOR_NE resolved as reduce (%left OPERATOR_NE).
    Conflict between rule 53 and token OPERATOR_AND resolved as reduce (OPERATOR_AND < OPERATOR_EQ).
    Conflict between rule 53 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < OPERATOR_EQ).
    Conflict between rule 53 and token '!' resolved as reduce ('!' < OPERATOR_EQ).
    Conflict between rule 53 and token '<' resolved as reduce (%left '<').
    Conflict between rule 53 and token '>' resolved as reduce (%left '>').
    Conflict between rule 53 and token '+' resolved as shift (OPERATOR_EQ < '+').
    Conflict between rule 53 and token '-' resolved as shift (OPERATOR_EQ < '-').
    Conflict between rule 53 and token '*' resolved as shift (OPERATOR_EQ < '*').
    Conflict between rule 53 and token '/' resolved as shift (OPERATOR_EQ < '/').


State 112

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   50    | exp . '!' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   54    | exp OPERATOR_NE exp .
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97

    $default  reduce using rule 54 (exp)

    Conflict between rule 54 and token OPERATOR_LE resolved as reduce (%left OPERATOR_LE).
    Conflict between rule 54 and token OPERATOR_GE resolved as reduce (%left OPERATOR_GE).
    Conflict between rule 54 and token OPERATOR_EQ resolved as reduce (%left OPERATOR_EQ).
    Conflict between rule 54 and token OPERATOR_NE resolved as reduce (%left OPERATOR_NE).
    Conflict between rule 54 and token OPERATOR_AND resolved as reduce (OPERATOR_AND < OPERATOR_NE).
    Conflict between rule 54 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < OPERATOR_NE).
    Conflict between rule 54 and token '!' resolved as reduce ('!' < OPERATOR_NE).
    Conflict between rule 54 and token '<' resolved as reduce (%left '<').
    Conflict between rule 54 and token '>' resolved as reduce (%left '>').
    Conflict between rule 54 and token '+' resolved as shift (OPERATOR_NE < '+').
    Conflict between rule 54 and token '-' resolved as shift (OPERATOR_NE < '-').
    Conflict between rule 54 and token '*' resolved as shift (OPERATOR_NE < '*').
    Conflict between rule 54 and token '/' resolved as shift (OPERATOR_NE < '/').


State 113

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   50    | exp . '!' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   55    | exp OPERATOR_AND exp .
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE  shift, and go to state 85
    OPERATOR_GE  shift, and go to state 86
    OPERATOR_EQ  shift, and go to state 87
    OPERATOR_NE  shift, and go to state 88
    '<'          shift, and go to state 92
    '>'          shift, and go to state 93
    '+'          shift, and go to state 94
    '-'          shift, and go to state 95
    '*'          shift, and go to state 96
    '/'          shift, and go to state 97

    $default  reduce using rule 55 (exp)

    Conflict between rule 55 and token OPERATOR_LE resolved as shift (OPERATOR_AND < OPERATOR_LE).
    Conflict between rule 55 and token OPERATOR_GE resolved as shift (OPERATOR_AND < OPERATOR_GE).
    Conflict between rule 55 and token OPERATOR_EQ resolved as shift (OPERATOR_AND < OPERATOR_EQ).
    Conflict between rule 55 and token OPERATOR_NE resolved as shift (OPERATOR_AND < OPERATOR_NE).
    Conflict between rule 55 and token OPERATOR_AND resolved as reduce (%left OPERATOR_AND).
    Conflict between rule 55 and token OPERATOR_OR resolved as reduce (%left OPERATOR_OR).
    Conflict between rule 55 and token '!' resolved as reduce (%left '!').
    Conflict between rule 55 and token '<' resolved as shift (OPERATOR_AND < '<').
    Conflict between rule 55 and token '>' resolved as shift (OPERATOR_AND < '>').
    Conflict between rule 55 and token '+' resolved as shift (OPERATOR_AND < '+').
    Conflict between rule 55 and token '-' resolved as shift (OPERATOR_AND < '-').
    Conflict between rule 55 and token '*' resolved as shift (OPERATOR_AND < '*').
    Conflict between rule 55 and token '/' resolved as shift (OPERATOR_AND < '/').


State 114

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   50    | exp . '!' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp
   56    | exp OPERATOR_OR exp .

    OPERATOR_LE  shift, and go to state 85
    OPERATOR_GE  shift, and go to state 86
    OPERATOR_EQ  shift, and go to state 87
    OPERATOR_NE  shift, and go to state 88
    '<'          shift, and go to state 92
    '>'          shift, and go to state 93
    '+'          shift, and go to state 94
    '-'          shift, and go to state 95
    '*'          shift, and go to state 96
    '/'          shift, and go to state 97

    $default  reduce using rule 56 (exp)

    Conflict between rule 56 and token OPERATOR_LE resolved as shift (OPERATOR_OR < OPERATOR_LE).
    Conflict between rule 56 and token OPERATOR_GE resolved as shift (OPERATOR_OR < OPERATOR_GE).
    Conflict between rule 56 and token OPERATOR_EQ resolved as shift (OPERATOR_OR < OPERATOR_EQ).
    Conflict between rule 56 and token OPERATOR_NE resolved as shift (OPERATOR_OR < OPERATOR_NE).
    Conflict between rule 56 and token OPERATOR_AND resolved as reduce (%left OPERATOR_AND).
    Conflict between rule 56 and token OPERATOR_OR resolved as reduce (%left OPERATOR_OR).
    Conflict between rule 56 and token '!' resolved as reduce (%left '!').
    Conflict between rule 56 and token '<' resolved as shift (OPERATOR_OR < '<').
    Conflict between rule 56 and token '>' resolved as shift (OPERATOR_OR < '>').
    Conflict between rule 56 and token '+' resolved as shift (OPERATOR_OR < '+').
    Conflict between rule 56 and token '-' resolved as shift (OPERATOR_OR < '-').
    Conflict between rule 56 and token '*' resolved as shift (OPERATOR_OR < '*').
    Conflict between rule 56 and token '/' resolved as shift (OPERATOR_OR < '/').


State 115

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   50    | exp . '!' exp
   50    | exp '!' exp .
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE  shift, and go to state 85
    OPERATOR_GE  shift, and go to state 86
    OPERATOR_EQ  shift, and go to state 87
    OPERATOR_NE  shift, and go to state 88
    '<'          shift, and go to state 92
    '>'          shift, and go to state 93
    '+'          shift, and go to state 94
    '-'          shift, and go to state 95
    '*'          shift, and go to state 96
    '/'          shift, and go to state 97

    $default  reduce using rule 50 (exp)

    Conflict between rule 50 and token OPERATOR_LE resolved as shift ('!' < OPERATOR_LE).
    Conflict between rule 50 and token OPERATOR_GE resolved as shift ('!' < OPERATOR_GE).
    Conflict between rule 50 and token OPERATOR_EQ resolved as shift ('!' < OPERATOR_EQ).
    Conflict between rule 50 and token OPERATOR_NE resolved as shift ('!' < OPERATOR_NE).
    Conflict between rule 50 and token OPERATOR_AND resolved as reduce (%left OPERATOR_AND).
    Conflict between rule 50 and token OPERATOR_OR resolved as reduce (%left OPERATOR_OR).
    Conflict between rule 50 and token '!' resolved as reduce (%left '!').
    Conflict between rule 50 and token '<' resolved as shift ('!' < '<').
    Conflict between rule 50 and token '>' resolved as shift ('!' < '>').
    Conflict between rule 50 and token '+' resolved as shift ('!' < '+').
    Conflict between rule 50 and token '-' resolved as shift ('!' < '-').
    Conflict between rule 50 and token '*' resolved as shift ('!' < '*').
    Conflict between rule 50 and token '/' resolved as shift ('!' < '/').


State 116

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   48    | exp '<' exp .
   49    | exp . '>' exp
   50    | exp . '!' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97

    $default  reduce using rule 48 (exp)

    Conflict between rule 48 and token OPERATOR_LE resolved as reduce (%left OPERATOR_LE).
    Conflict between rule 48 and token OPERATOR_GE resolved as reduce (%left OPERATOR_GE).
    Conflict between rule 48 and token OPERATOR_EQ resolved as reduce (%left OPERATOR_EQ).
    Conflict between rule 48 and token OPERATOR_NE resolved as reduce (%left OPERATOR_NE).
    Conflict between rule 48 and token OPERATOR_AND resolved as reduce (OPERATOR_AND < '<').
    Conflict between rule 48 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < '<').
    Conflict between rule 48 and token '!' resolved as reduce ('!' < '<').
    Conflict between rule 48 and token '<' resolved as reduce (%left '<').
    Conflict between rule 48 and token '>' resolved as reduce (%left '>').
    Conflict between rule 48 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 48 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 48 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 48 and token '/' resolved as shift ('<' < '/').


State 117

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   49    | exp '>' exp .
   50    | exp . '!' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97

    $default  reduce using rule 49 (exp)

    Conflict between rule 49 and token OPERATOR_LE resolved as reduce (%left OPERATOR_LE).
    Conflict between rule 49 and token OPERATOR_GE resolved as reduce (%left OPERATOR_GE).
    Conflict between rule 49 and token OPERATOR_EQ resolved as reduce (%left OPERATOR_EQ).
    Conflict between rule 49 and token OPERATOR_NE resolved as reduce (%left OPERATOR_NE).
    Conflict between rule 49 and token OPERATOR_AND resolved as reduce (OPERATOR_AND < '>').
    Conflict between rule 49 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < '>').
    Conflict between rule 49 and token '!' resolved as reduce ('!' < '>').
    Conflict between rule 49 and token '<' resolved as reduce (%left '<').
    Conflict between rule 49 and token '>' resolved as reduce (%left '>').
    Conflict between rule 49 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 49 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 49 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 49 and token '/' resolved as shift ('>' < '/').


State 118

   44 exp: exp . '+' exp
   44    | exp '+' exp .
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   50    | exp . '!' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    '*'  shift, and go to state 96
    '/'  shift, and go to state 97

    $default  reduce using rule 44 (exp)

    Conflict between rule 44 and token OPERATOR_LE resolved as reduce (OPERATOR_LE < '+').
    Conflict between rule 44 and token OPERATOR_GE resolved as reduce (OPERATOR_GE < '+').
    Conflict between rule 44 and token OPERATOR_EQ resolved as reduce (OPERATOR_EQ < '+').
    Conflict between rule 44 and token OPERATOR_NE resolved as reduce (OPERATOR_NE < '+').
    Conflict between rule 44 and token OPERATOR_AND resolved as reduce (OPERATOR_AND < '+').
    Conflict between rule 44 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < '+').
    Conflict between rule 44 and token '!' resolved as reduce ('!' < '+').
    Conflict between rule 44 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 44 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 44 and token '+' resolved as reduce (%left '+').
    Conflict between rule 44 and token '-' resolved as reduce (%left '-').
    Conflict between rule 44 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 44 and token '/' resolved as shift ('+' < '/').


State 119

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   45    | exp '-' exp .
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   50    | exp . '!' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    '*'  shift, and go to state 96
    '/'  shift, and go to state 97

    $default  reduce using rule 45 (exp)

    Conflict between rule 45 and token OPERATOR_LE resolved as reduce (OPERATOR_LE < '-').
    Conflict between rule 45 and token OPERATOR_GE resolved as reduce (OPERATOR_GE < '-').
    Conflict between rule 45 and token OPERATOR_EQ resolved as reduce (OPERATOR_EQ < '-').
    Conflict between rule 45 and token OPERATOR_NE resolved as reduce (OPERATOR_NE < '-').
    Conflict between rule 45 and token OPERATOR_AND resolved as reduce (OPERATOR_AND < '-').
    Conflict between rule 45 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < '-').
    Conflict between rule 45 and token '!' resolved as reduce ('!' < '-').
    Conflict between rule 45 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 45 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 45 and token '+' resolved as reduce (%left '+').
    Conflict between rule 45 and token '-' resolved as reduce (%left '-').
    Conflict between rule 45 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 45 and token '/' resolved as shift ('-' < '/').


State 120

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   46    | exp '*' exp .
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   50    | exp . '!' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    $default  reduce using rule 46 (exp)

    Conflict between rule 46 and token OPERATOR_LE resolved as reduce (OPERATOR_LE < '*').
    Conflict between rule 46 and token OPERATOR_GE resolved as reduce (OPERATOR_GE < '*').
    Conflict between rule 46 and token OPERATOR_EQ resolved as reduce (OPERATOR_EQ < '*').
    Conflict between rule 46 and token OPERATOR_NE resolved as reduce (OPERATOR_NE < '*').
    Conflict between rule 46 and token OPERATOR_AND resolved as reduce (OPERATOR_AND < '*').
    Conflict between rule 46 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < '*').
    Conflict between rule 46 and token '!' resolved as reduce ('!' < '*').
    Conflict between rule 46 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 46 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 46 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 46 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 46 and token '*' resolved as reduce (%left '*').
    Conflict between rule 46 and token '/' resolved as reduce (%left '/').


State 121

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   47    | exp '/' exp .
   48    | exp . '<' exp
   49    | exp . '>' exp
   50    | exp . '!' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    $default  reduce using rule 47 (exp)

    Conflict between rule 47 and token OPERATOR_LE resolved as reduce (OPERATOR_LE < '/').
    Conflict between rule 47 and token OPERATOR_GE resolved as reduce (OPERATOR_GE < '/').
    Conflict between rule 47 and token OPERATOR_EQ resolved as reduce (OPERATOR_EQ < '/').
    Conflict between rule 47 and token OPERATOR_NE resolved as reduce (OPERATOR_NE < '/').
    Conflict between rule 47 and token OPERATOR_AND resolved as reduce (OPERATOR_AND < '/').
    Conflict between rule 47 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < '/').
    Conflict between rule 47 and token '!' resolved as reduce ('!' < '/').
    Conflict between rule 47 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 47 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 47 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 47 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 47 and token '*' resolved as reduce (%left '*').
    Conflict between rule 47 and token '/' resolved as reduce (%left '/').


State 122

   40 restprint: ',' argprint . restprint

    ','  shift, and go to state 98

    $default  reduce using rule 41 (restprint)

    restprint  go to state 130


State 123

   31 cmd: SYMBOL_IDENTIFIER '[' exp ']' . '=' exp

    '='  shift, and go to state 131


State 124

   68 cmdif: KW_IF '(' exp ')' KW_THEN . cmd
   69      | KW_IF '(' exp ')' KW_THEN . cmd KW_ELSE cmd

    KW_IF              shift, and go to state 50
    KW_WHILE           shift, and go to state 51
    KW_READ            shift, and go to state 52
    KW_RETURN          shift, and go to state 53
    KW_PRINT           shift, and go to state 54
    SYMBOL_IDENTIFIER  shift, and go to state 55
    '{'                shift, and go to state 47

    $default  reduce using rule 38 (cmd)

    block     go to state 56
    cmd       go to state 132
    cmdif     go to state 59
    cmdwhile  go to state 60


State 125

   70 cmdwhile: KW_WHILE '(' exp ')' cmd .

    $default  reduce using rule 70 (cmdwhile)


State 126

   58 exp: SYMBOL_IDENTIFIER '[' exp ']' .

    $default  reduce using rule 58 (exp)


State 127

   66 funparamrest: ',' . exp funparamrest

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    '('                shift, and go to state 69

    exp  go to state 133


State 128

   64 funparaml: exp funparamrest .

    $default  reduce using rule 64 (funparaml)


State 129

   57 exp: SYMBOL_IDENTIFIER '(' funparaml ')' .

    $default  reduce using rule 57 (exp)


State 130

   40 restprint: ',' argprint restprint .

    $default  reduce using rule 40 (restprint)


State 131

   31 cmd: SYMBOL_IDENTIFIER '[' exp ']' '=' . exp

    SYMBOL_IDENTIFIER  shift, and go to state 65
    SYMBOL_LIT_INT     shift, and go to state 66
    SYMBOL_LIT_REAL    shift, and go to state 67
    SYMBOL_LIT_CHAR    shift, and go to state 68
    '('                shift, and go to state 69

    exp  go to state 134


State 132

   68 cmdif: KW_IF '(' exp ')' KW_THEN cmd .
   69      | KW_IF '(' exp ')' KW_THEN cmd . KW_ELSE cmd

    KW_ELSE  shift, and go to state 135

    KW_ELSE   [reduce using rule 68 (cmdif)]
    $default  reduce using rule 68 (cmdif)


State 133

   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   50    | exp . '!' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp
   66 funparamrest: ',' exp . funparamrest

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '!'           shift, and go to state 91
    '<'           shift, and go to state 92
    '>'           shift, and go to state 93
    '+'           shift, and go to state 94
    '-'           shift, and go to state 95
    '*'           shift, and go to state 96
    '/'           shift, and go to state 97
    ','           shift, and go to state 127

    $default  reduce using rule 67 (funparamrest)

    funparamrest  go to state 136


State 134

   31 cmd: SYMBOL_IDENTIFIER '[' exp ']' '=' exp .
   44 exp: exp . '+' exp
   45    | exp . '-' exp
   46    | exp . '*' exp
   47    | exp . '/' exp
   48    | exp . '<' exp
   49    | exp . '>' exp
   50    | exp . '!' exp
   51    | exp . OPERATOR_LE exp
   52    | exp . OPERATOR_GE exp
   53    | exp . OPERATOR_EQ exp
   54    | exp . OPERATOR_NE exp
   55    | exp . OPERATOR_AND exp
   56    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '!'           shift, and go to state 91
    '<'           shift, and go to state 92
    '>'           shift, and go to state 93
    '+'           shift, and go to state 94
    '-'           shift, and go to state 95
    '*'           shift, and go to state 96
    '/'           shift, and go to state 97

    $default  reduce using rule 31 (cmd)


State 135

   69 cmdif: KW_IF '(' exp ')' KW_THEN cmd KW_ELSE . cmd

    KW_IF              shift, and go to state 50
    KW_WHILE           shift, and go to state 51
    KW_READ            shift, and go to state 52
    KW_RETURN          shift, and go to state 53
    KW_PRINT           shift, and go to state 54
    SYMBOL_IDENTIFIER  shift, and go to state 55
    '{'                shift, and go to state 47

    $default  reduce using rule 38 (cmd)

    block     go to state 56
    cmd       go to state 137
    cmdif     go to state 59
    cmdwhile  go to state 60


State 136

   66 funparamrest: ',' exp funparamrest .

    $default  reduce using rule 66 (funparamrest)


State 137

   69 cmdif: KW_IF '(' exp ')' KW_THEN cmd KW_ELSE cmd .

    $default  reduce using rule 69 (cmdif)
